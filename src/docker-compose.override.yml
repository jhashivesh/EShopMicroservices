version: '3.4'
services:
  catalogdb:
    container_name: catalogdb
    environment:
      - POSTGRES_DB=CatalogDb
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    restart: always
    ports:
      - "5432:5432"
    volumes:
      - postgres_catalog:/var/lib/postgresql/data    
  basketdb:
    container_name: basketdb
    environment:
      - POSTGRES_DB=BasketDb                                            
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    restart: always                       
    ports:
      - "5433:5432"
    volumes:
      - postgres_basket:/var/lib/postgresql/data

  orderdb:
    container_name: orderdb
    environment:
      - ACCEPT_EULA=Y
      - SA_PASSWORD=Password123
    restart: always
    ports:
      - "1433:1433"
  
  identitydb:
    container_name: identitydb
    environment:
      - POSTGRES_DB=IdentityDb                                            
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    restart: always                       
    ports:
      - "5434:5432"
    volumes:
      - postgres_identity:/var/lib/postgresql/data
    
  
  distributedcache:
    container_name: distributedcache
    restart: always
    ports:
      - "6379:6379"

  messagebroker:
    container_name: messagebroker
    hostname: ecommerce-mq
    environment:
      - RABBITMQ_ERLANG_COOKIE=SWQOKODSQALRPCLNMEQG
      - RABBITMQ_DEFAULT_USER=guest
      - RABBITMQ_DEFAULT_PASS=guest
    restart: always
    ports:
      - "5672:5672"
      - "15672:15672"
  
  catalog.api:
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=https://+:443;http://+:80      
      - IdentityServiceUrl=http://identity
      - ConnectionStrings__Database=Server=catalogdb;Port=5432;Database=CatalogDb;User Id=postgres;Password=postgres;Include Error Detail=true
    depends_on:
      - catalogdb
    ports:
      - "5000:80"
      - "5050:443"
    volumes:
      - ${APPDATA}/Microsoft/UserSecrets:/home/app/.microsoft/usersecrets:ro
      - ${APPDATA}/ASP.NET/Https:/home/app/.aspnet/https:ro

  basket.api:
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=https://+:443;http://+:80      
      - ConnectionStrings__Database=Server=basketdb;Port=5432;Database=BasketDb;User Id=postgres;Password=postgres;Include Error Detail=true
      - ConnectionStrings__Redis=distributedcache:6379
      - IdentityServiceUrl=http://identity
      - GrpcSettings__DiscountUrl=http://discount.grpc
      - MessageBroker__Host=amqp://ecommerce-mq
      - MessageBroker__UserName=guest
      - MessageBroker__Password=guest
    depends_on:
      - basketdb
      - distributedcache
      - discount.grpc
      - messagebroker
    ports:
      - "5001:80"
      - "5051:443"
    volumes:
      - ${APPDATA}/Microsoft/UserSecrets:/home/app/.microsoft/usersecrets:ro
      - ${APPDATA}/ASP.NET/Https:/home/app/.aspnet/https:ro

  discount.grpc:
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=https://+:443;http://+:80      
      - ConnectionStrings__Database=Data Source=discountdb
    ports:
      - "5002:80"
      - "5052:443"
    volumes:
      - ${APPDATA}/Microsoft/UserSecrets:/home/app/.microsoft/usersecrets:ro
      - ${APPDATA}/ASP.NET/Https:/home/app/.aspnet/https:ro

  ordering.api:
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:80
      - ConnectionStrings__Database=Server=orderdb;Database=OrderDb;User Id=sa;Password=Password123;Encrypt=False;TrustServerCertificate=True
      - MessageBroker__Host=amqp://ecommerce-mq:5672
      - MessageBroker__UserName=guest
      - MessageBroker__Password=guest
      - FeatureManagement__OrderFullfilment=false
    depends_on:
      - orderdb
      - messagebroker
    ports:
      - "5003:8080"
      - "5053:8081"
    volumes:
      - ${APPDATA}/Microsoft/UserSecrets:/home/app/.microsoft/usersecrets:ro
      - ${APPDATA}/ASP.NET/Https:/home/app/.aspnet/https:ro

  yarpapigateway:
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:80
      - IdentityServiceUrl=http://identity
      - ClientApp=https://app.ecommerce.local
      - VIRTUAL_HOST=api.ecommerce.local
    depends_on:
      - catalog.api
      - basket.api
      - ordering.api
  
    volumes:
      - ${APPDATA}/Microsoft/UserSecrets:/home/app/.microsoft/usersecrets:ro
      - ${APPDATA}/ASP.NET/Https:/home/app/.aspnet/https:ro

  identity:
    container_name: identity
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:80
      
      # This issuer URI is used to validate the audience of the JWT token and must match the one mentioned in auth.service.ts file of the Angular project
      - IssuerUri=https://id.ecommerce.local
      - ClientApp=https://app.ecommerce.local
      - ConnectionStrings__DefaultConnection=Server=identitydb;Port=5432;Database=IdentityDb;User Id=postgres;Password=postgres;Include Error Detail=true   
      - VIRTUAL_HOST=id.ecommerce.local
    restart: always    
    depends_on:
      - identitydb
   
    command: 
      - start-dev

  webapp:
    container_name: webapp    
    environment:     
      - CLIENT_URL=https://app.ecommerce.local
      - API_URL=https://api.ecommerce.local/
      - IDP_URL=https://id.ecommerce.local
      - VIRTUAL_HOST=app.ecommerce.local
      

  nginx-proxy:    
    container_name: nginx-proxy
    restart: unless-stopped
    ports:
      - 80:80      
      - 443:443
    volumes:
      - /var/run/docker.sock:/tmp/docker.sock:ro
      - ./WebApps/Shopping.Web/ssl:/etc/nginx/certs
  
    

   
      
   
    

    

